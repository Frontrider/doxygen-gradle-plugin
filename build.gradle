plugins {
    id 'com.gradle.build-scan' version '1.16'
    id 'groovy'
    id 'maven'
    id 'org.ysb33r.bintray' version '1.5'
    id 'org.ysb33r.cloudci' version '2.2'
    id 'org.ysb33r.gradletest' version '2.0-beta.3'
    id 'com.jfrog.artifactory' version '3.0.1'
    id 'com.github.hierynomus.license' version '0.14.0'
    id 'com.gradle.plugin-publish' version '0.9.7'
}

buildScan {
    termsOfServiceUrl   = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

apply from : 'gradle/download-tests.gradle'

import org.ysb33r.gradle.bintray.BintraySignVersion


group = 'org.ysb33r.gradle'
archivesBaseName = 'doxygen'
version = '0.5'
sourceCompatibility = 1.7
targetCompatibility = 1.7

ext {
    moduleName = rootProject.name
    bintrayOwner = 'ysb33r'
    bintrayRepo = 'grysb33r'
    doxygenDownloadDir = new File(buildDir,'doxygen')
    spockGroovyVer = GroovySystem.version.replaceAll(/\.\d+$/,'')
    notSnapshot = {!version.endsWith("SNAPSHOT")}
}

repositories {
    jcenter()

    ivy {
        name 'Downloader for Doxygen distributions'
	    url 'https://downloads.sourceforge.net/project/doxygen'
        resolve.dynamicMode = false
        layout 'pattern', {
            artifact 'rel-[revision]/[artifact]-[revision].[ext]'
        }
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': moduleName, 'Implementation-Version': version
    }
}

test {
    systemProperties 'TESTFSREADROOT'  : new File(projectDir,'src/test/resources').absolutePath
    systemProperties 'TESTFSWRITEROOT' : new File(buildDir,'tmp/test/doxygen').absolutePath
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    description "An archive of the JavaDocs for Maven Central"
    classifier "javadoc"
    from javadoc
}

artifacts {
    archives sourcesJar
    archives javadocJar
}


dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'org.ysb33r.gradle:grolifant:0.10'
    testCompile ("org.spockframework:spock-core:1.2-groovy-${spockGroovyVer}") {
        exclude module : 'groovy-all'
    }
}

artifactory {
    publish {
        contextUrl = 'http://oss.jfrog.org'
        repository {
            repoKey = 'oss-snapshot-local'
            username = project.properties.bintrayUserName
            password = project.properties.bintrayApiKey
        }
    }
}

artifactoryPublish {
    onlyIf { version.endsWith("SNAPSHOT") }
}

task signArchives (type:BintraySignVersion ) {
    username    project.properties.bintrayUserName
    apiKey      project.properties.bintrayApiKey
    repoOwner   bintrayOwner
    repoName    bintrayRepo
    packageName moduleName
    gpgPassphrase     project.properties.bintrayGpgPassphrase
}


uploadArchives  {
    repositories {
        bintrayMavenDeployer {
            username          project.properties.bintrayUserName
            apiKey            project.properties.bintrayApiKey
            repoOwner         bintrayOwner
            repoName          bintrayRepo
            packageName       moduleName
            description       'This is a plugin for Gradle that allows Doxygen (www.doxygen.org) to be used to generate documentation'
            tags              'gradle','doxygen','documentation'
            licenses          'Apache-2.0'
            vcsUrl            'https://github.com/ysb33r/doxygen-gradle-plugin.git'
            autoCreatePackage true
            updatePackage     true
            versionAttributes 'gradle-plugin' : "org.ysb33r.doxygen:${group}:${archivesBaseName}"
        }
    }

    onlyIf notSnapshot
}

pluginBundle {
    description = 'Doxygen plugin for Gradle'
    website     = 'https://github.com/ysb33r/doxygen-gradle-plugin'
    vcsUrl      = 'https://github.com/ysb33r/doxygen-gradle-plugin.git'

    tags = ['doxygen','documentation','native','cpp','c','c++']

    plugins {
        gradletestPlugin {
            id = 'org.ysb33r.doxygen'
            displayName = 'This is a plugin for Gradle that allows Doxygen (www.doxygen.org) to be used to generate documentation'
        }
    }

    mavenCoordinates {
        groupId = project.group
        artifactId = 'doxygen-gradle-plugin'
    }

}
publishPlugins {
    onlyIf notSnapshot
    mustRunAfter check
}

license {
    header = rootProject.file('config/HEADER')
    strictCheck = true
    ignoreFailures = false
    mapping {
        groovy ='DOUBLESLASH_STYLE'
    }
    ext.year = '2013-2018'
    excludes([
        '**/*.adoc', '**/*.md',
        '**/*.properties',
        '**/*.dox',
        '**/*CompatibilitySpec.groovy'
    ])
}

gradleTest {
    versions '3.0', '3.2.1', '3.5', '4.0', '4.2.1', '4.10.2', '5.0'
    systemProperties DOX_VERSION : doxygenTestVersions[0]
    systemProperties DOX_REPO : cacheDoxygenBinaries.destinationDir
    dependsOn cacheDoxygenBinaries
}

cloudci {

  appveyor {
      gradleTest {
          maxParallelForks = 4
      }
  } 

  travisci {
      gradleTest {
          maxParallelForks = 1
      }
  }
}

task release {
    dependsOn build, uploadArchives, publishPlugins
    onlyIf notSnapshot
}
